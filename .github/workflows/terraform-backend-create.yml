name: 'Reusable Workflow - Create TFState Storage'

on:
  workflow_call:
    inputs:
      environment: {required: true, type: string}
      subnet_ids: {required: false, type: string, default: ''}
      run_resource_provider_check: {required: false, type: boolean, default: true}
      run_resource_group_check: {required: false, type: boolean, default: true}
      run_storage_account_check: {required: false, type: boolean, default: true}
      run_network_rules_check: {required: false, type: boolean, default: true}
      run_blob_properties_check: {required: false, type: boolean, default: true}
      run_container_properties_check: {required: false, type: boolean, default: true}
      run_backup_checks: {required: false, type: boolean, default: true}
      create_resource_group: {required: false, type: boolean, default: true}
      create_storage_account: {required: false, type: boolean, default: true}
      update_network_rules: {required: false, type: boolean, default: false}
      create_container: {required: false, type: boolean, default: true}
      update_blob_policies: {required: false, type: boolean, default: true}
      update_container_policies: {required: false, type: boolean, default: true}
      setup_azure_backup: {required: false, type: boolean, default: true}
      mode: {description: 'Run mode (checks-only, backup-only, infra-only, or create)', required: false, type: string, default: 'create'}
    secrets:
      ARM_TENANT_ID: {required: true}
      ARM_SUBSCRIPTION_ID: {required: true}
      ARM_CLIENT_ID: {required: true}

permissions:
  id-token: write
  contents: write
  pull-requests: write
  actions: read

jobs:
  create-tfstate-storage:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout Action Repository
        uses: actions/checkout@v4
        with:
          repository: elabx-org/alz-reusable-workflows
          path: alz-reusable-workflows
          fetch-depth: 0
          ref: main

      - name: Create TFState Storage
        uses: ./alz-reusable-workflows/.github/actions/terraform-backend-create
        with:
          environment: ${{ inputs.environment }}
          subnet_ids: ${{ inputs.subnet_ids }}
          run_resource_provider_check: ${{ inputs.run_resource_provider_check }}
          run_resource_group_check: ${{ inputs.run_resource_group_check }}
          run_storage_account_check: ${{ inputs.run_storage_account_check }}
          run_network_rules_check: ${{ inputs.run_network_rules_check }}
          run_blob_properties_check: ${{ inputs.run_blob_properties_check }}
          run_container_properties_check: ${{ inputs.run_container_properties_check }}
          run_backup_checks: ${{ inputs.run_backup_checks }}
          create_resource_group: ${{ inputs.create_resource_group }}
          create_storage_account: ${{ inputs.create_storage_account }}
          update_network_rules: ${{ inputs.update_network_rules }}
          create_container: ${{ inputs.create_container }}
          update_blob_policies: ${{ inputs.update_blob_policies }}
          update_container_policies: ${{ inputs.update_container_policies }}
          setup_azure_backup: ${{ inputs.setup_azure_backup }}
          checks_only: ${{ inputs.checks_only }}
          client_id: ${{ secrets.ARM_CLIENT_ID }}
          tenant_id: ${{ secrets.ARM_TENANT_ID }}
          subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}